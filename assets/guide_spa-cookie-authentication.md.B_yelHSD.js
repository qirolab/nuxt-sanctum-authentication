import{_ as i,c as a,o as s,a5 as e}from"./chunks/framework.BmV27xUm.js";const g=JSON.parse('{"title":"SPA Cookie Authentication","description":"","frontmatter":{},"headers":[],"relativePath":"guide/spa-cookie-authentication.md","filePath":"guide/spa-cookie-authentication.md"}'),t={name:"guide/spa-cookie-authentication.md"},n=e(`<h1 id="spa-cookie-authentication" tabindex="-1">SPA Cookie Authentication <a class="header-anchor" href="#spa-cookie-authentication" aria-label="Permalink to &quot;SPA Cookie Authentication&quot;">​</a></h1><p>The <code>nuxt-sanctum-authentication</code> module is specifically designed to seamlessly integrate with Laravel Sanctum&#39;s SPA (Single Page Application) cookie-based authentication. This setup provides a secure and efficient way to manage user authentication in your Nuxt 3 application.</p><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h2><p>To enable SPA cookie-based authentication, you need to set the <code>laravelSanctum.authMode</code> property to <code>cookie</code> in your <code>nuxt.config.ts</code> file:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineNuxtConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    laravelSanctum: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        apiUrl: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;http://laravel-api.test&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Your Laravel API URL</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        authMode: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;cookie&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="domain-configuration" tabindex="-1">Domain Configuration <a class="header-anchor" href="#domain-configuration" aria-label="Permalink to &quot;Domain Configuration&quot;">​</a></h2><p>For this authentication mode to work correctly, your Nuxt and Laravel applications must share the same top-level domain. Here&#39;s an example setup:</p><ul><li><p><strong>Nuxt Application</strong>: <code>domain.com</code></p></li><li><p><strong>Laravel Application</strong>: <code>api.domain.com</code></p></li></ul><p>This ensures that cookies can be shared across both applications, which is crucial for maintaining the user&#39;s authentication state.</p><h2 id="how-it-works" tabindex="-1">How It Works <a class="header-anchor" href="#how-it-works" aria-label="Permalink to &quot;How It Works&quot;">​</a></h2><p>Once the module is configured, you can authenticate users by sending their credentials to the designated login endpoint. Here&#39;s how you can do it:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">login</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useSanctum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> credentials</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    email: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;john@doe.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    password: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;password&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    remember: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> login</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(credentials);</span></span></code></pre></div><p>When the <code>login</code> method is called with the user&#39;s credentials, the module will handle the authentication process, including obtaining a CSRF token and setting the necessary cookies.</p><h2 id="post-login-behavior" tabindex="-1">Post-Login Behavior <a class="header-anchor" href="#post-login-behavior" aria-label="Permalink to &quot;Post-Login Behavior&quot;">​</a></h2><p>After a successful login, the user will be automatically redirected to the route specified in <code>laravelSanctum.redirect.redirectToAfterLogin</code>. From this point on, the module will manage the authentication state, including requesting a CSRF cookie from the API and ensuring that it is included as an <code>XSRF</code> header in all subsequent requests.</p><h2 id="laravel-configuration" tabindex="-1">Laravel Configuration <a class="header-anchor" href="#laravel-configuration" aria-label="Permalink to &quot;Laravel Configuration&quot;">​</a></h2><p>To ensure that your Laravel backend properly supports SPA cookie authentication with Nuxt, you need to configure Laravel as follows:</p><ol><li><p><strong>Stateful Domains</strong>: Register your Nuxt application&#39;s domain in the <code>SANCTUM_STATEFUL_DOMAINS</code> environment variable.</p></li><li><p><strong>CORS Configuration</strong>:</p><ul><li><p>Add your Nuxt domain to the <code>allowed_origins</code> list in <code>config/cors.php</code>.</p></li><li><p>Set <code>support_credentials</code> to <code>true</code> in <code>config/cors.php</code>.</p></li></ul></li><li><p><strong>Sanctum Middleware</strong>: Enable Sanctum&#39;s <code>statefulApi</code> middleware to handle stateful API requests.</p></li><li><p><strong>Session Domain</strong>: Use the top-level domain for the session by setting <code>SESSION_DOMAIN=.domain.com</code> in your environment file. During development, you can use <code>localhost</code>.</p></li></ol><p>By following these steps, your Laravel application will be fully configured to support SPA cookie authentication with your Nuxt 3 frontend.</p><blockquote><p>For more detailed instructions, refer to the official Laravel documentation on <a href="https://laravel.com/docs/11.x/sanctum#spa-authentication" target="_blank" rel="noreferrer">SPA Authentication</a>.</p></blockquote>`,20),o=[n];function l(h,r,p,c,d,u){return s(),a("div",null,o)}const E=i(t,[["render",l]]);export{g as __pageData,E as default};
